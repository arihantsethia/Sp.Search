
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'E\x99\t\x00\xfd\x80\xad\xe0\xe3)\xfbI\x8b\xeb\xaf]'
    
_lr_action_items = {'DIVIDE':([2,5,8,13,14,15,16,17,],[-9,10,10,-4,-8,-6,-5,-7,]),'RPAREN':([2,8,13,14,15,16,17,],[-9,14,-4,-8,-6,-5,-7,]),'NAME':([0,3,4,6,9,10,11,],[2,6,2,6,2,2,2,]),'QUOTE':([0,4,6,7,9,10,11,12,],[3,3,-2,13,3,3,3,-3,]),'PLUS':([2,5,8,13,14,15,16,17,],[-9,9,9,-4,-8,-6,9,-7,]),'LPAREN':([0,4,9,10,11,],[4,4,4,4,4,]),'MINUS':([2,5,8,13,14,15,16,17,],[-9,11,11,-4,-8,11,11,-7,]),'$end':([1,2,5,13,14,15,16,17,],[0,-9,-1,-4,-8,-6,-5,-7,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,4,9,10,11,],[5,8,15,16,17,]),'words':([3,6,],[7,12,]),'statement':([0,],[1,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','queryparser.py',44),
  ('words -> NAME','words',1,'p_statement_end','queryparser.py',50),
  ('words -> NAME words','words',2,'p_statement_words','queryparser.py',55),
  ('expression -> QUOTE words QUOTE','expression',3,'p_expression_phrase','queryparser.py',60),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_or','queryparser.py',66),
  ('expression -> expression PLUS expression','expression',3,'p_expression_and','queryparser.py',87),
  ('expression -> expression MINUS expression','expression',3,'p_expression_not','queryparser.py',105),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','queryparser.py',123),
  ('expression -> NAME','expression',1,'p_expression_name','queryparser.py',127),
]
